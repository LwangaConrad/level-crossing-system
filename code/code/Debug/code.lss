
code.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000000c  00800200  0000050c  00000580  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000050c  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  0000058c  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000005bc  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000020  00000000  00000000  000005fc  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000013c9  00000000  00000000  0000061c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000c2a  00000000  00000000  000019e5  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000073b  00000000  00000000  0000260f  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000024  00000000  00000000  00002d4c  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000586  00000000  00000000  00002d70  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000a6a  00000000  00000000  000032f6  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000010  00000000  00000000  00003d60  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	71 c0       	rjmp	.+226    	; 0xe4 <__ctors_end>
   2:	00 00       	nop
   4:	86 c0       	rjmp	.+268    	; 0x112 <__bad_interrupt>
   6:	00 00       	nop
   8:	84 c0       	rjmp	.+264    	; 0x112 <__bad_interrupt>
   a:	00 00       	nop
   c:	82 c0       	rjmp	.+260    	; 0x112 <__bad_interrupt>
   e:	00 00       	nop
  10:	80 c0       	rjmp	.+256    	; 0x112 <__bad_interrupt>
  12:	00 00       	nop
  14:	7e c0       	rjmp	.+252    	; 0x112 <__bad_interrupt>
  16:	00 00       	nop
  18:	7c c0       	rjmp	.+248    	; 0x112 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	7a c0       	rjmp	.+244    	; 0x112 <__bad_interrupt>
  1e:	00 00       	nop
  20:	78 c0       	rjmp	.+240    	; 0x112 <__bad_interrupt>
  22:	00 00       	nop
  24:	76 c0       	rjmp	.+236    	; 0x112 <__bad_interrupt>
  26:	00 00       	nop
  28:	74 c0       	rjmp	.+232    	; 0x112 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	72 c0       	rjmp	.+228    	; 0x112 <__bad_interrupt>
  2e:	00 00       	nop
  30:	70 c0       	rjmp	.+224    	; 0x112 <__bad_interrupt>
  32:	00 00       	nop
  34:	6e c0       	rjmp	.+220    	; 0x112 <__bad_interrupt>
  36:	00 00       	nop
  38:	6c c0       	rjmp	.+216    	; 0x112 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	6a c0       	rjmp	.+212    	; 0x112 <__bad_interrupt>
  3e:	00 00       	nop
  40:	68 c0       	rjmp	.+208    	; 0x112 <__bad_interrupt>
  42:	00 00       	nop
  44:	66 c0       	rjmp	.+204    	; 0x112 <__bad_interrupt>
  46:	00 00       	nop
  48:	64 c0       	rjmp	.+200    	; 0x112 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	62 c0       	rjmp	.+196    	; 0x112 <__bad_interrupt>
  4e:	00 00       	nop
  50:	60 c0       	rjmp	.+192    	; 0x112 <__bad_interrupt>
  52:	00 00       	nop
  54:	5e c0       	rjmp	.+188    	; 0x112 <__bad_interrupt>
  56:	00 00       	nop
  58:	5c c0       	rjmp	.+184    	; 0x112 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	5a c0       	rjmp	.+180    	; 0x112 <__bad_interrupt>
  5e:	00 00       	nop
  60:	58 c0       	rjmp	.+176    	; 0x112 <__bad_interrupt>
  62:	00 00       	nop
  64:	56 c0       	rjmp	.+172    	; 0x112 <__bad_interrupt>
  66:	00 00       	nop
  68:	54 c0       	rjmp	.+168    	; 0x112 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	52 c0       	rjmp	.+164    	; 0x112 <__bad_interrupt>
  6e:	00 00       	nop
  70:	50 c0       	rjmp	.+160    	; 0x112 <__bad_interrupt>
  72:	00 00       	nop
  74:	4e c0       	rjmp	.+156    	; 0x112 <__bad_interrupt>
  76:	00 00       	nop
  78:	4c c0       	rjmp	.+152    	; 0x112 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	4a c0       	rjmp	.+148    	; 0x112 <__bad_interrupt>
  7e:	00 00       	nop
  80:	48 c0       	rjmp	.+144    	; 0x112 <__bad_interrupt>
  82:	00 00       	nop
  84:	46 c0       	rjmp	.+140    	; 0x112 <__bad_interrupt>
  86:	00 00       	nop
  88:	44 c0       	rjmp	.+136    	; 0x112 <__bad_interrupt>
  8a:	00 00       	nop
  8c:	42 c0       	rjmp	.+132    	; 0x112 <__bad_interrupt>
  8e:	00 00       	nop
  90:	40 c0       	rjmp	.+128    	; 0x112 <__bad_interrupt>
  92:	00 00       	nop
  94:	3e c0       	rjmp	.+124    	; 0x112 <__bad_interrupt>
  96:	00 00       	nop
  98:	3c c0       	rjmp	.+120    	; 0x112 <__bad_interrupt>
  9a:	00 00       	nop
  9c:	3a c0       	rjmp	.+116    	; 0x112 <__bad_interrupt>
  9e:	00 00       	nop
  a0:	38 c0       	rjmp	.+112    	; 0x112 <__bad_interrupt>
  a2:	00 00       	nop
  a4:	36 c0       	rjmp	.+108    	; 0x112 <__bad_interrupt>
  a6:	00 00       	nop
  a8:	34 c0       	rjmp	.+104    	; 0x112 <__bad_interrupt>
  aa:	00 00       	nop
  ac:	32 c0       	rjmp	.+100    	; 0x112 <__bad_interrupt>
  ae:	00 00       	nop
  b0:	30 c0       	rjmp	.+96     	; 0x112 <__bad_interrupt>
  b2:	00 00       	nop
  b4:	2e c0       	rjmp	.+92     	; 0x112 <__bad_interrupt>
  b6:	00 00       	nop
  b8:	2c c0       	rjmp	.+88     	; 0x112 <__bad_interrupt>
  ba:	00 00       	nop
  bc:	2a c0       	rjmp	.+84     	; 0x112 <__bad_interrupt>
  be:	00 00       	nop
  c0:	28 c0       	rjmp	.+80     	; 0x112 <__bad_interrupt>
  c2:	00 00       	nop
  c4:	26 c0       	rjmp	.+76     	; 0x112 <__bad_interrupt>
  c6:	00 00       	nop
  c8:	24 c0       	rjmp	.+72     	; 0x112 <__bad_interrupt>
  ca:	00 00       	nop
  cc:	22 c0       	rjmp	.+68     	; 0x112 <__bad_interrupt>
  ce:	00 00       	nop
  d0:	20 c0       	rjmp	.+64     	; 0x112 <__bad_interrupt>
  d2:	00 00       	nop
  d4:	1e c0       	rjmp	.+60     	; 0x112 <__bad_interrupt>
  d6:	00 00       	nop
  d8:	1c c0       	rjmp	.+56     	; 0x112 <__bad_interrupt>
  da:	00 00       	nop
  dc:	1a c0       	rjmp	.+52     	; 0x112 <__bad_interrupt>
  de:	00 00       	nop
  e0:	18 c0       	rjmp	.+48     	; 0x112 <__bad_interrupt>
	...

000000e4 <__ctors_end>:
  e4:	11 24       	eor	r1, r1
  e6:	1f be       	out	0x3f, r1	; 63
  e8:	cf ef       	ldi	r28, 0xFF	; 255
  ea:	d1 e2       	ldi	r29, 0x21	; 33
  ec:	de bf       	out	0x3e, r29	; 62
  ee:	cd bf       	out	0x3d, r28	; 61
  f0:	00 e0       	ldi	r16, 0x00	; 0
  f2:	0c bf       	out	0x3c, r16	; 60

000000f4 <__do_copy_data>:
  f4:	12 e0       	ldi	r17, 0x02	; 2
  f6:	a0 e0       	ldi	r26, 0x00	; 0
  f8:	b2 e0       	ldi	r27, 0x02	; 2
  fa:	ec e0       	ldi	r30, 0x0C	; 12
  fc:	f5 e0       	ldi	r31, 0x05	; 5
  fe:	00 e0       	ldi	r16, 0x00	; 0
 100:	0b bf       	out	0x3b, r16	; 59
 102:	02 c0       	rjmp	.+4      	; 0x108 <__do_copy_data+0x14>
 104:	07 90       	elpm	r0, Z+
 106:	0d 92       	st	X+, r0
 108:	ac 30       	cpi	r26, 0x0C	; 12
 10a:	b1 07       	cpc	r27, r17
 10c:	d9 f7       	brne	.-10     	; 0x104 <__do_copy_data+0x10>
 10e:	02 d0       	rcall	.+4      	; 0x114 <main>
 110:	fb c1       	rjmp	.+1014   	; 0x508 <_exit>

00000112 <__bad_interrupt>:
 112:	76 cf       	rjmp	.-276    	; 0x0 <__vectors>

00000114 <main>:
int main(void)
{
    /*
		LWANGA CONRAD ARTHUR 1800721116 18/U/21116/PS
	*/
	DDRG = 0x00;
 114:	13 ba       	out	0x13, r1	; 19
	DDRL = 0xFF;
 116:	8f ef       	ldi	r24, 0xFF	; 255
 118:	80 93 0a 01 	sts	0x010A, r24	; 0x80010a <__TEXT_REGION_LENGTH__+0x70010a>
	DDRF = 0b00001111;
 11c:	2f e0       	ldi	r18, 0x0F	; 15
 11e:	20 bb       	out	0x10, r18	; 16
	DDRJ = 0xFF;
 120:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <__TEXT_REGION_LENGTH__+0x700104>
	DDRH = 0xFF;
 124:	80 93 01 01 	sts	0x0101, r24	; 0x800101 <__TEXT_REGION_LENGTH__+0x700101>
	DDRK = 0xFF;
 128:	80 93 07 01 	sts	0x0107, r24	; 0x800107 <__TEXT_REGION_LENGTH__+0x700107>
	DDRB = 0xFF;
 12c:	84 b9       	out	0x04, r24	; 4
	DDRA = 0xFF;
 12e:	81 b9       	out	0x01, r24	; 1
	int x,l,t,i;
	int wer = 0;
	TCCR0B |= (1<<CS00);
 130:	95 b5       	in	r25, 0x25	; 37
 132:	91 60       	ori	r25, 0x01	; 1
 134:	95 bd       	out	0x25, r25	; 37
	TCNT0 = 0x0;
 136:	16 bc       	out	0x26, r1	; 38

	PORTF = 0xFF;
 138:	81 bb       	out	0x11, r24	; 17
	PORTA = 0x3;
 13a:	93 e0       	ldi	r25, 0x03	; 3
 13c:	92 b9       	out	0x02, r25	; 2
	PING = 0xFF;
 13e:	82 bb       	out	0x12, r24	; 18
	//switch on green led
	PORTB |= 0xF;
 140:	85 b1       	in	r24, 0x05	; 5
 142:	8f 60       	ori	r24, 0x0F	; 15
 144:	85 b9       	out	0x05, r24	; 5
	PORTH &= ~(1<<enable);
 146:	e2 e0       	ldi	r30, 0x02	; 2
 148:	f1 e0       	ldi	r31, 0x01	; 1
 14a:	80 81       	ld	r24, Z
 14c:	8b 7f       	andi	r24, 0xFB	; 251
 14e:	80 83       	st	Z, r24
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 150:	89 ef       	ldi	r24, 0xF9	; 249
 152:	90 e0       	ldi	r25, 0x00	; 0
 154:	01 97       	sbiw	r24, 0x01	; 1
 156:	f1 f7       	brne	.-4      	; 0x154 <main+0x40>
 158:	00 c0       	rjmp	.+0      	; 0x15a <main+0x46>
 15a:	00 00       	nop
	_delay_ms(1);
	PORTH |= (1<<enable);
 15c:	80 81       	ld	r24, Z
 15e:	84 60       	ori	r24, 0x04	; 4
 160:	80 83       	st	Z, r24
 162:	c9 ef       	ldi	r28, 0xF9	; 249
 164:	d0 e0       	ldi	r29, 0x00	; 0
 166:	21 97       	sbiw	r28, 0x01	; 1
 168:	f1 f7       	brne	.-4      	; 0x166 <main+0x52>
 16a:	00 c0       	rjmp	.+0      	; 0x16c <main+0x58>
 16c:	00 00       	nop
	_delay_ms(1);

	PORTH &= ~(1<<rs);
 16e:	80 81       	ld	r24, Z
 170:	8e 7f       	andi	r24, 0xFE	; 254
 172:	80 83       	st	Z, r24
	PORTH &= ~(1<<rw);
 174:	80 81       	ld	r24, Z
 176:	8d 7f       	andi	r24, 0xFD	; 253
 178:	80 83       	st	Z, r24

	PORTH &= ~(1<<enable);
 17a:	80 81       	ld	r24, Z
 17c:	8b 7f       	andi	r24, 0xFB	; 251
 17e:	80 83       	st	Z, r24
 180:	89 ef       	ldi	r24, 0xF9	; 249
 182:	90 e0       	ldi	r25, 0x00	; 0
 184:	01 97       	sbiw	r24, 0x01	; 1
 186:	f1 f7       	brne	.-4      	; 0x184 <main+0x70>
 188:	00 c0       	rjmp	.+0      	; 0x18a <main+0x76>
 18a:	00 00       	nop
	_delay_ms(1);
	PORTH |= (1<<enable);
 18c:	80 81       	ld	r24, Z
 18e:	84 60       	ori	r24, 0x04	; 4
 190:	80 83       	st	Z, r24
 192:	c9 ef       	ldi	r28, 0xF9	; 249
 194:	d0 e0       	ldi	r29, 0x00	; 0
 196:	21 97       	sbiw	r28, 0x01	; 1
 198:	f1 f7       	brne	.-4      	; 0x196 <main+0x82>
 19a:	00 c0       	rjmp	.+0      	; 0x19c <main+0x88>
 19c:	00 00       	nop
	_delay_ms(1);

	PORTJ = 0x0F;
 19e:	20 93 05 01 	sts	0x0105, r18	; 0x800105 <__TEXT_REGION_LENGTH__+0x700105>
	PORTH &= ~(1<<enable);
 1a2:	80 81       	ld	r24, Z
 1a4:	8b 7f       	andi	r24, 0xFB	; 251
 1a6:	80 83       	st	Z, r24
 1a8:	89 ef       	ldi	r24, 0xF9	; 249
 1aa:	90 e0       	ldi	r25, 0x00	; 0
 1ac:	01 97       	sbiw	r24, 0x01	; 1
 1ae:	f1 f7       	brne	.-4      	; 0x1ac <main+0x98>
 1b0:	00 c0       	rjmp	.+0      	; 0x1b2 <main+0x9e>
 1b2:	00 00       	nop
	_delay_ms(1);
	PORTH |= (1<<enable);
 1b4:	80 81       	ld	r24, Z
 1b6:	84 60       	ori	r24, 0x04	; 4
 1b8:	80 83       	st	Z, r24
 1ba:	c9 ef       	ldi	r28, 0xF9	; 249
 1bc:	d0 e0       	ldi	r29, 0x00	; 0
 1be:	21 97       	sbiw	r28, 0x01	; 1
 1c0:	f1 f7       	brne	.-4      	; 0x1be <main+0xaa>
 1c2:	00 c0       	rjmp	.+0      	; 0x1c4 <main+0xb0>
 1c4:	00 00       	nop
	_delay_ms(1);

	PORTH |= (1<<rs);
 1c6:	80 81       	ld	r24, Z
 1c8:	81 60       	ori	r24, 0x01	; 1
 1ca:	80 83       	st	Z, r24
	PORTH &= ~(1<<rw);
 1cc:	80 81       	ld	r24, Z
 1ce:	8d 7f       	andi	r24, 0xFD	; 253
 1d0:	80 83       	st	Z, r24
 1d2:	0f 2e       	mov	r0, r31
 1d4:	f5 e0       	ldi	r31, 0x05	; 5
 1d6:	6f 2e       	mov	r6, r31
 1d8:	f2 e0       	ldi	r31, 0x02	; 2
 1da:	7f 2e       	mov	r7, r31
 1dc:	f0 2d       	mov	r31, r0
 1de:	6a e0       	ldi	r22, 0x0A	; 10
 1e0:	72 e0       	ldi	r23, 0x02	; 2
 1e2:	d3 01       	movw	r26, r6
	for(x = 0; x < 5; x++){
		PORTJ = word[x];
 1e4:	c5 e0       	ldi	r28, 0x05	; 5
 1e6:	d1 e0       	ldi	r29, 0x01	; 1
 1e8:	8d 91       	ld	r24, X+
 1ea:	88 83       	st	Y, r24
		PORTH &= ~(1<<enable);
 1ec:	80 81       	ld	r24, Z
 1ee:	8b 7f       	andi	r24, 0xFB	; 251
 1f0:	80 83       	st	Z, r24
 1f2:	89 ef       	ldi	r24, 0xF9	; 249
 1f4:	90 e0       	ldi	r25, 0x00	; 0
 1f6:	01 97       	sbiw	r24, 0x01	; 1
 1f8:	f1 f7       	brne	.-4      	; 0x1f6 <main+0xe2>
 1fa:	00 c0       	rjmp	.+0      	; 0x1fc <main+0xe8>
 1fc:	00 00       	nop
		_delay_ms(1);
		PORTH |= (1<<enable);
 1fe:	80 81       	ld	r24, Z
 200:	84 60       	ori	r24, 0x04	; 4
 202:	80 83       	st	Z, r24
 204:	89 ef       	ldi	r24, 0xF9	; 249
 206:	90 e0       	ldi	r25, 0x00	; 0
 208:	01 97       	sbiw	r24, 0x01	; 1
 20a:	f1 f7       	brne	.-4      	; 0x208 <main+0xf4>
 20c:	00 c0       	rjmp	.+0      	; 0x20e <main+0xfa>
 20e:	00 00       	nop
	PORTH |= (1<<enable);
	_delay_ms(1);

	PORTH |= (1<<rs);
	PORTH &= ~(1<<rw);
	for(x = 0; x < 5; x++){
 210:	6a 17       	cp	r22, r26
 212:	7b 07       	cpc	r23, r27
 214:	49 f7       	brne	.-46     	; 0x1e8 <main+0xd4>
		_delay_ms(1);
	}
	    while (1) 
    {
		//when 0 is pressed
		PORTF = 0b11111011;
 216:	0f 2e       	mov	r0, r31
 218:	fb ef       	ldi	r31, 0xFB	; 251
 21a:	ff 2e       	mov	r15, r31
 21c:	f0 2d       	mov	r31, r0
		if((PINF & (1<<7)) == 0){
			//switch off green leds
			PORTB &= 0xF0;
			//turn motor clockwise
			PORTL = 0b00000010;
 21e:	ab e0       	ldi	r26, 0x0B	; 11
 220:	b1 e0       	ldi	r27, 0x01	; 1
 222:	68 94       	set
 224:	dd 24       	eor	r13, r13
 226:	d1 f8       	bld	r13, 1
			//change led to 3 minutes
			PORTA = 0xd;
 228:	0f 2e       	mov	r0, r31
 22a:	fd e0       	ldi	r31, 0x0D	; 13
 22c:	cf 2e       	mov	r12, r31
 22e:	f0 2d       	mov	r31, r0
			//change lcd status to --Stop--
			PORTH &= ~(1<<enable);
 230:	68 94       	set
 232:	44 24       	eor	r4, r4
 234:	41 f8       	bld	r4, 1
 236:	55 24       	eor	r5, r5
 238:	53 94       	inc	r5
			PORTH &= ~(1<<enable);
			_delay_ms(1);
			PORTH |= (1<<enable);
			_delay_ms(1);
			
			PORTJ = 0x01;
 23a:	45 e0       	ldi	r20, 0x05	; 5
 23c:	51 e0       	ldi	r21, 0x01	; 1
 23e:	81 e0       	ldi	r24, 0x01	; 1
 240:	e8 2e       	mov	r14, r24
 242:	04 e0       	ldi	r16, 0x04	; 4
 244:	12 e0       	ldi	r17, 0x02	; 2
			}
			
					for (i = 0; i < 20; i++)
					{
						//light red led
						PORTB ^= 0xF0;
 246:	90 ef       	ldi	r25, 0xF0	; 240
						//sound buzzer
						PORTK ^= (1<<0);
 248:	e8 e0       	ldi	r30, 0x08	; 8
 24a:	f1 e0       	ldi	r31, 0x01	; 1
						PORTB ^= 0xF0;
						PORTK ^= (1<<0);
						_delay_ms(200);
					}
						//remove 1 minute from led 
						PORTA = 0x25;
 24c:	0f 2e       	mov	r0, r31
 24e:	f5 e2       	ldi	r31, 0x25	; 37
 250:	bf 2e       	mov	r11, r31
 252:	f0 2d       	mov	r31, r0
						PORTB ^= 0xF0;
						PORTK ^= (1<<0);
						_delay_ms(200);
					}
						//remove 1 minute from led
						PORTA = 0x9f;
 254:	0f 2e       	mov	r0, r31
 256:	ff e9       	ldi	r31, 0x9F	; 159
 258:	af 2e       	mov	r10, r31
 25a:	f0 2d       	mov	r31, r0
						PORTB ^= 0xF0;
						PORTK ^= (1<<0);
						_delay_ms(200);
					}
						//remove 1 minute from led to bring it back to 0
						PORTA = 0x3;
 25c:	0f 2e       	mov	r0, r31
 25e:	f3 e0       	ldi	r31, 0x03	; 3
 260:	9f 2e       	mov	r9, r31
 262:	f0 2d       	mov	r31, r0
		_delay_ms(1);
	}
	    while (1) 
    {
		//when 0 is pressed
		PORTF = 0b11111011;
 264:	f1 ba       	out	0x11, r15	; 17
		if((PINF & (1<<7)) == 0){
 266:	7f 99       	sbic	0x0f, 7	; 15
 268:	fd cf       	rjmp	.-6      	; 0x264 <main+0x150>
			//switch off green leds
			PORTB &= 0xF0;
 26a:	25 b1       	in	r18, 0x05	; 5
 26c:	20 7f       	andi	r18, 0xF0	; 240
 26e:	25 b9       	out	0x05, r18	; 5
			//turn motor clockwise
			PORTL = 0b00000010;
 270:	dc 92       	st	X, r13
			//change led to 3 minutes
			PORTA = 0xd;
 272:	c2 b8       	out	0x02, r12	; 2
			//change lcd status to --Stop--
			PORTH &= ~(1<<enable);
 274:	e2 01       	movw	r28, r4
 276:	28 81       	ld	r18, Y
 278:	2b 7f       	andi	r18, 0xFB	; 251
 27a:	28 83       	st	Y, r18
 27c:	c9 ef       	ldi	r28, 0xF9	; 249
 27e:	d0 e0       	ldi	r29, 0x00	; 0
 280:	21 97       	sbiw	r28, 0x01	; 1
 282:	f1 f7       	brne	.-4      	; 0x280 <main+0x16c>
 284:	00 c0       	rjmp	.+0      	; 0x286 <main+0x172>
 286:	00 00       	nop
			_delay_ms(1);
			PORTH |= (1<<enable);
 288:	e2 01       	movw	r28, r4
 28a:	28 81       	ld	r18, Y
 28c:	24 60       	ori	r18, 0x04	; 4
 28e:	28 83       	st	Y, r18
 290:	c9 ef       	ldi	r28, 0xF9	; 249
 292:	d0 e0       	ldi	r29, 0x00	; 0
 294:	21 97       	sbiw	r28, 0x01	; 1
 296:	f1 f7       	brne	.-4      	; 0x294 <main+0x180>
 298:	00 c0       	rjmp	.+0      	; 0x29a <main+0x186>
 29a:	00 00       	nop
			_delay_ms(1);
			
			PORTH &= ~(1<<rs);
 29c:	e2 01       	movw	r28, r4
 29e:	28 81       	ld	r18, Y
 2a0:	2e 7f       	andi	r18, 0xFE	; 254
 2a2:	28 83       	st	Y, r18
			PORTH &= ~(1<<rw);
 2a4:	28 81       	ld	r18, Y
 2a6:	2d 7f       	andi	r18, 0xFD	; 253
 2a8:	28 83       	st	Y, r18
			
			PORTH &= ~(1<<enable);
 2aa:	28 81       	ld	r18, Y
 2ac:	2b 7f       	andi	r18, 0xFB	; 251
 2ae:	28 83       	st	Y, r18
 2b0:	c9 ef       	ldi	r28, 0xF9	; 249
 2b2:	d0 e0       	ldi	r29, 0x00	; 0
 2b4:	21 97       	sbiw	r28, 0x01	; 1
 2b6:	f1 f7       	brne	.-4      	; 0x2b4 <main+0x1a0>
 2b8:	00 c0       	rjmp	.+0      	; 0x2ba <main+0x1a6>
 2ba:	00 00       	nop
			_delay_ms(1);
			PORTH |= (1<<enable);
 2bc:	e2 01       	movw	r28, r4
 2be:	28 81       	ld	r18, Y
 2c0:	24 60       	ori	r18, 0x04	; 4
 2c2:	28 83       	st	Y, r18
 2c4:	c9 ef       	ldi	r28, 0xF9	; 249
 2c6:	d0 e0       	ldi	r29, 0x00	; 0
 2c8:	21 97       	sbiw	r28, 0x01	; 1
 2ca:	f1 f7       	brne	.-4      	; 0x2c8 <main+0x1b4>
 2cc:	00 c0       	rjmp	.+0      	; 0x2ce <main+0x1ba>
 2ce:	00 00       	nop
			_delay_ms(1);
			
			PORTJ = 0x01;
 2d0:	ea 01       	movw	r28, r20
 2d2:	e8 82       	st	Y, r14
			PORTH &= ~(1<<enable);
 2d4:	e2 01       	movw	r28, r4
 2d6:	28 81       	ld	r18, Y
 2d8:	2b 7f       	andi	r18, 0xFB	; 251
 2da:	28 83       	st	Y, r18
 2dc:	c9 ef       	ldi	r28, 0xF9	; 249
 2de:	d0 e0       	ldi	r29, 0x00	; 0
 2e0:	21 97       	sbiw	r28, 0x01	; 1
 2e2:	f1 f7       	brne	.-4      	; 0x2e0 <main+0x1cc>
 2e4:	00 c0       	rjmp	.+0      	; 0x2e6 <main+0x1d2>
 2e6:	00 00       	nop
			_delay_ms(1);
			PORTH |= (1<<enable);
 2e8:	e2 01       	movw	r28, r4
 2ea:	28 81       	ld	r18, Y
 2ec:	24 60       	ori	r18, 0x04	; 4
 2ee:	28 83       	st	Y, r18
 2f0:	c9 ef       	ldi	r28, 0xF9	; 249
 2f2:	d0 e0       	ldi	r29, 0x00	; 0
 2f4:	21 97       	sbiw	r28, 0x01	; 1
 2f6:	f1 f7       	brne	.-4      	; 0x2f4 <main+0x1e0>
 2f8:	00 c0       	rjmp	.+0      	; 0x2fa <main+0x1e6>
 2fa:	00 00       	nop
			_delay_ms(1);
			
			PORTH |= (1<<rs);
 2fc:	e2 01       	movw	r28, r4
 2fe:	28 81       	ld	r18, Y
 300:	21 60       	ori	r18, 0x01	; 1
 302:	28 83       	st	Y, r18
			PORTH &= ~(1<<rw);
 304:	28 81       	ld	r18, Y
 306:	2d 7f       	andi	r18, 0xFD	; 253
 308:	28 83       	st	Y, r18
 30a:	20 e0       	ldi	r18, 0x00	; 0
 30c:	32 e0       	ldi	r19, 0x02	; 2
			
			for(l = 0; l < 4; l++){
				PORTJ = word2[l];
 30e:	e9 01       	movw	r28, r18
 310:	89 90       	ld	r8, Y+
 312:	9e 01       	movw	r18, r28
 314:	ea 01       	movw	r28, r20
 316:	88 82       	st	Y, r8
				PORTH &= ~(1<<enable);
 318:	e2 01       	movw	r28, r4
 31a:	88 80       	ld	r8, Y
 31c:	d8 2d       	mov	r29, r8
 31e:	db 7f       	andi	r29, 0xFB	; 251
 320:	8d 2e       	mov	r8, r29
 322:	e2 01       	movw	r28, r4
 324:	88 82       	st	Y, r8
 326:	c9 ef       	ldi	r28, 0xF9	; 249
 328:	d0 e0       	ldi	r29, 0x00	; 0
 32a:	21 97       	sbiw	r28, 0x01	; 1
 32c:	f1 f7       	brne	.-4      	; 0x32a <main+0x216>
 32e:	00 c0       	rjmp	.+0      	; 0x330 <main+0x21c>
 330:	00 00       	nop
				_delay_ms(1);
				PORTH |= (1<<enable);
 332:	e2 01       	movw	r28, r4
 334:	88 80       	ld	r8, Y
 336:	d8 2d       	mov	r29, r8
 338:	d4 60       	ori	r29, 0x04	; 4
 33a:	8d 2e       	mov	r8, r29
 33c:	e2 01       	movw	r28, r4
 33e:	88 82       	st	Y, r8
 340:	c9 ef       	ldi	r28, 0xF9	; 249
 342:	d0 e0       	ldi	r29, 0x00	; 0
 344:	21 97       	sbiw	r28, 0x01	; 1
 346:	f1 f7       	brne	.-4      	; 0x344 <main+0x230>
 348:	00 c0       	rjmp	.+0      	; 0x34a <main+0x236>
 34a:	00 00       	nop
			_delay_ms(1);
			
			PORTH |= (1<<rs);
			PORTH &= ~(1<<rw);
			
			for(l = 0; l < 4; l++){
 34c:	20 17       	cp	r18, r16
 34e:	31 07       	cpc	r19, r17
 350:	f1 f6       	brne	.-68     	; 0x30e <main+0x1fa>
 352:	24 e1       	ldi	r18, 0x14	; 20
 354:	30 e0       	ldi	r19, 0x00	; 0
			}
			
					for (i = 0; i < 20; i++)
					{
						//light red led
						PORTB ^= 0xF0;
 356:	85 b0       	in	r8, 0x05	; 5
 358:	89 26       	eor	r8, r25
 35a:	85 b8       	out	0x05, r8	; 5
						//sound buzzer
						PORTK ^= (1<<0);
 35c:	80 80       	ld	r8, Z
 35e:	88 26       	eor	r8, r24
 360:	80 82       	st	Z, r8
 362:	cf e4       	ldi	r28, 0x4F	; 79
 364:	d3 ec       	ldi	r29, 0xC3	; 195
 366:	21 97       	sbiw	r28, 0x01	; 1
 368:	f1 f7       	brne	.-4      	; 0x366 <main+0x252>
 36a:	00 c0       	rjmp	.+0      	; 0x36c <main+0x258>
 36c:	00 00       	nop
 36e:	21 50       	subi	r18, 0x01	; 1
 370:	31 09       	sbc	r19, r1
				_delay_ms(1);
				PORTH |= (1<<enable);
				_delay_ms(1);
			}
			
					for (i = 0; i < 20; i++)
 372:	89 f7       	brne	.-30     	; 0x356 <main+0x242>
 374:	24 eb       	ldi	r18, 0xB4	; 180
 376:	30 e0       	ldi	r19, 0x00	; 0
						PORTK ^= (1<<0);
						_delay_ms(200);
					}
					for (i = 0; i < 180; i++)
					{
						PORTL = 0b00000000;
 378:	1c 92       	st	X, r1
						PORTB ^= 0xF0;
 37a:	85 b0       	in	r8, 0x05	; 5
 37c:	89 26       	eor	r8, r25
 37e:	85 b8       	out	0x05, r8	; 5
						PORTK ^= (1<<0);
 380:	80 80       	ld	r8, Z
 382:	88 26       	eor	r8, r24
 384:	80 82       	st	Z, r8
 386:	cf e4       	ldi	r28, 0x4F	; 79
 388:	d3 ec       	ldi	r29, 0xC3	; 195
 38a:	21 97       	sbiw	r28, 0x01	; 1
 38c:	f1 f7       	brne	.-4      	; 0x38a <main+0x276>
 38e:	00 c0       	rjmp	.+0      	; 0x390 <main+0x27c>
 390:	00 00       	nop
 392:	21 50       	subi	r18, 0x01	; 1
 394:	31 09       	sbc	r19, r1
						PORTB ^= 0xF0;
						//sound buzzer
						PORTK ^= (1<<0);
						_delay_ms(200);
					}
					for (i = 0; i < 180; i++)
 396:	81 f7       	brne	.-32     	; 0x378 <main+0x264>
 398:	24 e6       	ldi	r18, 0x64	; 100
 39a:	30 e0       	ldi	r19, 0x00	; 0
						PORTK ^= (1<<0);
						_delay_ms(200);
					}
					for (i = 0; i < 100; i++)
					{
						PORTB ^= 0xF0;
 39c:	85 b0       	in	r8, 0x05	; 5
 39e:	89 26       	eor	r8, r25
 3a0:	85 b8       	out	0x05, r8	; 5
						PORTK ^= (1<<0);
 3a2:	80 80       	ld	r8, Z
 3a4:	88 26       	eor	r8, r24
 3a6:	80 82       	st	Z, r8
 3a8:	cf e4       	ldi	r28, 0x4F	; 79
 3aa:	d3 ec       	ldi	r29, 0xC3	; 195
 3ac:	21 97       	sbiw	r28, 0x01	; 1
 3ae:	f1 f7       	brne	.-4      	; 0x3ac <main+0x298>
 3b0:	00 c0       	rjmp	.+0      	; 0x3b2 <main+0x29e>
 3b2:	00 00       	nop
 3b4:	21 50       	subi	r18, 0x01	; 1
 3b6:	31 09       	sbc	r19, r1
						PORTL = 0b00000000;
						PORTB ^= 0xF0;
						PORTK ^= (1<<0);
						_delay_ms(200);
					}
					for (i = 0; i < 100; i++)
 3b8:	89 f7       	brne	.-30     	; 0x39c <main+0x288>
						PORTB ^= 0xF0;
						PORTK ^= (1<<0);
						_delay_ms(200);
					}
						//remove 1 minute from led 
						PORTA = 0x25;
 3ba:	b2 b8       	out	0x02, r11	; 2
 3bc:	2c e2       	ldi	r18, 0x2C	; 44
 3be:	31 e0       	ldi	r19, 0x01	; 1
					for (i = 0; i < 300; i++)
					{
						PORTB ^= 0xF0;
 3c0:	85 b0       	in	r8, 0x05	; 5
 3c2:	89 26       	eor	r8, r25
 3c4:	85 b8       	out	0x05, r8	; 5
						PORTK ^= (1<<0);
 3c6:	80 80       	ld	r8, Z
 3c8:	88 26       	eor	r8, r24
 3ca:	80 82       	st	Z, r8
 3cc:	cf e4       	ldi	r28, 0x4F	; 79
 3ce:	d3 ec       	ldi	r29, 0xC3	; 195
 3d0:	21 97       	sbiw	r28, 0x01	; 1
 3d2:	f1 f7       	brne	.-4      	; 0x3d0 <main+0x2bc>
 3d4:	00 c0       	rjmp	.+0      	; 0x3d6 <main+0x2c2>
 3d6:	00 00       	nop
 3d8:	21 50       	subi	r18, 0x01	; 1
 3da:	31 09       	sbc	r19, r1
						PORTK ^= (1<<0);
						_delay_ms(200);
					}
						//remove 1 minute from led 
						PORTA = 0x25;
					for (i = 0; i < 300; i++)
 3dc:	89 f7       	brne	.-30     	; 0x3c0 <main+0x2ac>
						PORTB ^= 0xF0;
						PORTK ^= (1<<0);
						_delay_ms(200);
					}
						//remove 1 minute from led
						PORTA = 0x9f;
 3de:	a2 b8       	out	0x02, r10	; 2
 3e0:	2c e2       	ldi	r18, 0x2C	; 44
 3e2:	31 e0       	ldi	r19, 0x01	; 1
					for (i = 0; i < 300; i++)
					{
						PORTB ^= 0xF0;
 3e4:	85 b0       	in	r8, 0x05	; 5
 3e6:	89 26       	eor	r8, r25
 3e8:	85 b8       	out	0x05, r8	; 5
						PORTK ^= (1<<0);
 3ea:	80 80       	ld	r8, Z
 3ec:	88 26       	eor	r8, r24
 3ee:	80 82       	st	Z, r8
 3f0:	cf e4       	ldi	r28, 0x4F	; 79
 3f2:	d3 ec       	ldi	r29, 0xC3	; 195
 3f4:	21 97       	sbiw	r28, 0x01	; 1
 3f6:	f1 f7       	brne	.-4      	; 0x3f4 <main+0x2e0>
 3f8:	00 c0       	rjmp	.+0      	; 0x3fa <main+0x2e6>
 3fa:	00 00       	nop
 3fc:	21 50       	subi	r18, 0x01	; 1
 3fe:	31 09       	sbc	r19, r1
						PORTK ^= (1<<0);
						_delay_ms(200);
					}
						//remove 1 minute from led
						PORTA = 0x9f;
					for (i = 0; i < 300; i++)
 400:	89 f7       	brne	.-30     	; 0x3e4 <main+0x2d0>
						PORTB ^= 0xF0;
						PORTK ^= (1<<0);
						_delay_ms(200);
					}
						//remove 1 minute from led to bring it back to 0
						PORTA = 0x3;
 402:	92 b8       	out	0x02, r9	; 2
						//stop buzzer
						PORTK &= ~(1<<0);
 404:	20 81       	ld	r18, Z
 406:	2e 7f       	andi	r18, 0xFE	; 254
 408:	20 83       	st	Z, r18
						//switch on green led
						PORTB |= 0xF;
 40a:	25 b1       	in	r18, 0x05	; 5
 40c:	2f 60       	ori	r18, 0x0F	; 15
 40e:	25 b9       	out	0x05, r18	; 5
						//turn motor anticlockwise
						PORTL = 0b00000001;
 410:	ec 92       	st	X, r14
						//change lcd status to Cross
						PORTH &= ~(1<<enable);
 412:	e2 01       	movw	r28, r4
 414:	28 81       	ld	r18, Y
 416:	2b 7f       	andi	r18, 0xFB	; 251
 418:	28 83       	st	Y, r18
 41a:	c9 ef       	ldi	r28, 0xF9	; 249
 41c:	d0 e0       	ldi	r29, 0x00	; 0
 41e:	21 97       	sbiw	r28, 0x01	; 1
 420:	f1 f7       	brne	.-4      	; 0x41e <__LOCK_REGION_LENGTH__+0x1e>
 422:	00 c0       	rjmp	.+0      	; 0x424 <__LOCK_REGION_LENGTH__+0x24>
 424:	00 00       	nop
						_delay_ms(1);
						PORTH |= (1<<enable);
 426:	e2 01       	movw	r28, r4
 428:	28 81       	ld	r18, Y
 42a:	24 60       	ori	r18, 0x04	; 4
 42c:	28 83       	st	Y, r18
 42e:	c9 ef       	ldi	r28, 0xF9	; 249
 430:	d0 e0       	ldi	r29, 0x00	; 0
 432:	21 97       	sbiw	r28, 0x01	; 1
 434:	f1 f7       	brne	.-4      	; 0x432 <__LOCK_REGION_LENGTH__+0x32>
 436:	00 c0       	rjmp	.+0      	; 0x438 <__LOCK_REGION_LENGTH__+0x38>
 438:	00 00       	nop
						_delay_ms(1);
						
						PORTH &= ~(1<<rs);
 43a:	e2 01       	movw	r28, r4
 43c:	28 81       	ld	r18, Y
 43e:	2e 7f       	andi	r18, 0xFE	; 254
 440:	28 83       	st	Y, r18
						PORTH &= ~(1<<rw);
 442:	28 81       	ld	r18, Y
 444:	2d 7f       	andi	r18, 0xFD	; 253
 446:	28 83       	st	Y, r18
						
						PORTH &= ~(1<<enable);
 448:	28 81       	ld	r18, Y
 44a:	2b 7f       	andi	r18, 0xFB	; 251
 44c:	28 83       	st	Y, r18
 44e:	c9 ef       	ldi	r28, 0xF9	; 249
 450:	d0 e0       	ldi	r29, 0x00	; 0
 452:	21 97       	sbiw	r28, 0x01	; 1
 454:	f1 f7       	brne	.-4      	; 0x452 <__LOCK_REGION_LENGTH__+0x52>
 456:	00 c0       	rjmp	.+0      	; 0x458 <__LOCK_REGION_LENGTH__+0x58>
 458:	00 00       	nop
						_delay_ms(1);
						PORTH |= (1<<enable);
 45a:	e2 01       	movw	r28, r4
 45c:	28 81       	ld	r18, Y
 45e:	24 60       	ori	r18, 0x04	; 4
 460:	28 83       	st	Y, r18
 462:	c9 ef       	ldi	r28, 0xF9	; 249
 464:	d0 e0       	ldi	r29, 0x00	; 0
 466:	21 97       	sbiw	r28, 0x01	; 1
 468:	f1 f7       	brne	.-4      	; 0x466 <__LOCK_REGION_LENGTH__+0x66>
 46a:	00 c0       	rjmp	.+0      	; 0x46c <__LOCK_REGION_LENGTH__+0x6c>
 46c:	00 00       	nop
						_delay_ms(1);
						
						PORTJ = 0x01;
 46e:	ea 01       	movw	r28, r20
 470:	e8 82       	st	Y, r14
						PORTH &= ~(1<<enable);
 472:	e2 01       	movw	r28, r4
 474:	28 81       	ld	r18, Y
 476:	2b 7f       	andi	r18, 0xFB	; 251
 478:	28 83       	st	Y, r18
 47a:	c9 ef       	ldi	r28, 0xF9	; 249
 47c:	d0 e0       	ldi	r29, 0x00	; 0
 47e:	21 97       	sbiw	r28, 0x01	; 1
 480:	f1 f7       	brne	.-4      	; 0x47e <__LOCK_REGION_LENGTH__+0x7e>
 482:	00 c0       	rjmp	.+0      	; 0x484 <__LOCK_REGION_LENGTH__+0x84>
 484:	00 00       	nop
						_delay_ms(1);
						PORTH |= (1<<enable);
 486:	e2 01       	movw	r28, r4
 488:	28 81       	ld	r18, Y
 48a:	24 60       	ori	r18, 0x04	; 4
 48c:	28 83       	st	Y, r18
 48e:	c9 ef       	ldi	r28, 0xF9	; 249
 490:	d0 e0       	ldi	r29, 0x00	; 0
 492:	21 97       	sbiw	r28, 0x01	; 1
 494:	f1 f7       	brne	.-4      	; 0x492 <__LOCK_REGION_LENGTH__+0x92>
 496:	00 c0       	rjmp	.+0      	; 0x498 <__LOCK_REGION_LENGTH__+0x98>
 498:	00 00       	nop
						_delay_ms(1);
						
						PORTH |= (1<<rs);
 49a:	e2 01       	movw	r28, r4
 49c:	28 81       	ld	r18, Y
 49e:	21 60       	ori	r18, 0x01	; 1
 4a0:	28 83       	st	Y, r18
						PORTH &= ~(1<<rw);
 4a2:	28 81       	ld	r18, Y
 4a4:	2d 7f       	andi	r18, 0xFD	; 253
 4a6:	28 83       	st	Y, r18
 4a8:	93 01       	movw	r18, r6

						for(t = 0; t < 5; t++){
							PORTJ = word[t];
 4aa:	e9 01       	movw	r28, r18
 4ac:	89 90       	ld	r8, Y+
 4ae:	9e 01       	movw	r18, r28
 4b0:	ea 01       	movw	r28, r20
 4b2:	88 82       	st	Y, r8
							PORTH &= ~(1<<enable);
 4b4:	e2 01       	movw	r28, r4
 4b6:	88 80       	ld	r8, Y
 4b8:	d8 2d       	mov	r29, r8
 4ba:	db 7f       	andi	r29, 0xFB	; 251
 4bc:	8d 2e       	mov	r8, r29
 4be:	e2 01       	movw	r28, r4
 4c0:	88 82       	st	Y, r8
 4c2:	c9 ef       	ldi	r28, 0xF9	; 249
 4c4:	d0 e0       	ldi	r29, 0x00	; 0
 4c6:	21 97       	sbiw	r28, 0x01	; 1
 4c8:	f1 f7       	brne	.-4      	; 0x4c6 <__LOCK_REGION_LENGTH__+0xc6>
 4ca:	00 c0       	rjmp	.+0      	; 0x4cc <__LOCK_REGION_LENGTH__+0xcc>
 4cc:	00 00       	nop
							_delay_ms(1);
							PORTH |= (1<<enable);
 4ce:	e2 01       	movw	r28, r4
 4d0:	88 80       	ld	r8, Y
 4d2:	d8 2d       	mov	r29, r8
 4d4:	d4 60       	ori	r29, 0x04	; 4
 4d6:	8d 2e       	mov	r8, r29
 4d8:	e2 01       	movw	r28, r4
 4da:	88 82       	st	Y, r8
 4dc:	c9 ef       	ldi	r28, 0xF9	; 249
 4de:	d0 e0       	ldi	r29, 0x00	; 0
 4e0:	21 97       	sbiw	r28, 0x01	; 1
 4e2:	f1 f7       	brne	.-4      	; 0x4e0 <__LOCK_REGION_LENGTH__+0xe0>
 4e4:	00 c0       	rjmp	.+0      	; 0x4e6 <__LOCK_REGION_LENGTH__+0xe6>
 4e6:	00 00       	nop
						_delay_ms(1);
						
						PORTH |= (1<<rs);
						PORTH &= ~(1<<rw);

						for(t = 0; t < 5; t++){
 4e8:	62 17       	cp	r22, r18
 4ea:	73 07       	cpc	r23, r19
 4ec:	f1 f6       	brne	.-68     	; 0x4aa <__LOCK_REGION_LENGTH__+0xaa>
 4ee:	24 e1       	ldi	r18, 0x14	; 20
 4f0:	30 e0       	ldi	r19, 0x00	; 0
 4f2:	cf e4       	ldi	r28, 0x4F	; 79
 4f4:	d3 ec       	ldi	r29, 0xC3	; 195
 4f6:	21 97       	sbiw	r28, 0x01	; 1
 4f8:	f1 f7       	brne	.-4      	; 0x4f6 <__LOCK_REGION_LENGTH__+0xf6>
 4fa:	00 c0       	rjmp	.+0      	; 0x4fc <__LOCK_REGION_LENGTH__+0xfc>
 4fc:	00 00       	nop
 4fe:	21 50       	subi	r18, 0x01	; 1
 500:	31 09       	sbc	r19, r1
							PORTH &= ~(1<<enable);
							_delay_ms(1);
							PORTH |= (1<<enable);
							_delay_ms(1);
						}
						for (i = 0; i < 20; i++)
 502:	b9 f7       	brne	.-18     	; 0x4f2 <__LOCK_REGION_LENGTH__+0xf2>
						{
							_delay_ms(200);
						}
						PORTL = 0b00000000;
 504:	1c 92       	st	X, r1
 506:	ae ce       	rjmp	.-676    	; 0x264 <main+0x150>

00000508 <_exit>:
 508:	f8 94       	cli

0000050a <__stop_program>:
 50a:	ff cf       	rjmp	.-2      	; 0x50a <__stop_program>
